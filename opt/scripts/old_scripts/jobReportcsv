#!/bin/tcsh

# Takes pavilion results directories for each category (p/f/i) and
# make a csv output summary line for each.

if ($#argv < 2 ) then
        echo "Usage: JobReportcsv test-suite start-date(yyyy-mm-dd)"
        exit
endif


# Original Author, M. Berry, HPC-5/LANL, 03 Dec 15

# Tweaked to support input test suite file and start date, cwi, 12/4/15
# Enhanced amount of working space reported, cwi, 12/4/15

# generate output report files for passed, failed, and incomplete data
rm -r /tmp/pav*dirs.out
pav get_results -ts $1 -s $2 -p | grep "__" > /tmp/pav_pass_dirs.out
pav get_results -ts $1 -s $2 -f | grep "__" > /tmp/pav_fail_dirs.out
pav get_results -ts $1 -s $2 -i | grep "__" > /tmp/pav_inc_dirs.out

# column headings
echo "Job Name","Job ID","Num Nodes","Sub Date","Sub Time","Start Date","Start Time","End Date","End Time","Status","Run Dir","Results Dir"

# Note, submit date and time is when job submitted to the system by Pavilion and the result directory is created.
# Note, start date and time is when job actually launched by the scheduler.

# for all the input files
foreach t ( /tmp/pav*dirs.out )

   # which type of file are we currently doing  -- controls contents of status column
   setenv QQ_T `echo $t | cut -d '_' -f 2`
   if ( $QQ_T == "pass" ) then
      setenv QQ_STAT PASS
   else if ( $QQ_T == "fail" ) then
      setenv QQ_STAT FAIL
   else if ( $QQ_T == "inc" ) then
      setenv QQ_STAT UNKNOWN
   else
      setenv QQ_STAT "PROCESSING ERROR"
   endif

   # for each line (directory) in the input file
   foreach d ( `cat $t` )

      # CAUTION: some of these are very specific to current format and path length
      #          might need some tweaking if anything is different
      setenv QQ_NAM `echo $d | rev | cut -d "/" -f 2 | rev`
      setenv QQ_JID `grep "<JobID" $d/*.log | cut -d " " -f 2`
      setenv QQ_NN `grep "<nnodes>" $d/*.log | cut -d " " -f 2`
      setenv QQ_SUBD `echo $d | cut -d "." -f 2 | cut -d "T" -f 1`
      setenv QQ_SUBT `echo $d | cut -d "." -f 2 | cut -d "T" -f 2`
      setenv QQ_BD `grep -i "<start>" $d/*.log | cut -d " " -f 3 | cut -d "T" -f 1`
      setenv QQ_BT `grep -i "<start>" $d/*.log | cut -d " " -f 3 | cut -d "T" -f 2`
      setenv QQ_ED `grep "<end>" $d/*.log | cut -d " " -f 3 | cut -d "T" -f 1`
      setenv QQ_ET `grep "<end>" $d/*.log | cut -d " " -f 3 | cut -d "T" -f 2`
      #setenv QQ_WD `grep "Working Space:" $d/*.log | cut -d "/" -f 2,3,4,5`
      set i = `grep "Working Space:" $d/*.log | cut -d " " -f 3` 
      set ws = $i:h

      # print line of output
      #echo $QQ_NAM,$QQ_JID,$QQ_NN,$QQ_SUBD,$QQ_SUBT,$QQ_BD,$QQ_BT,$QQ_ED,$QQ_ET,$QQ_STAT,/$QQ_WD,$d
      echo $QQ_NAM,$QQ_JID,$QQ_NN,$QQ_SUBD,$QQ_SUBT,$QQ_BD,$QQ_BT,$QQ_ED,$QQ_ET,$QQ_STAT,$ws,$d


   end

end


# cleanup

unsetenv QQ_SUBT
unsetenv QQ_SUBD
unsetenv QQ_BD
unsetenv QQ_BT
unsetenv QQ_ED
unsetenv QQ_ET
unsetenv QQ_NN
unsetenv QQ_NAM
#unsetenv QQ_WD
unsetenv QQ_JID
unsetenv QQ_STAT
unsetenv $d
unsetenv $t
