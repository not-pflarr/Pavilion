#  ###################################################################
#
#  Disclaimer and Notice of Copyright 
#  ==================================
#
#  Copyright (c) 2015, Los Alamos National Security, LLC
#  All rights reserved.
#
#  Copyright 2015. Los Alamos National Security, LLC. 
#  This software was produced under U.S. Government contract 
#  DE-AC52-06NA25396 for Los Alamos National Laboratory (LANL), 
#  which is operated by Los Alamos National Security, LLC for 
#  the U.S. Department of Energy. The U.S. Government has rights 
#  to use, reproduce, and distribute this software.  NEITHER 
#  THE GOVERNMENT NOR LOS ALAMOS NATIONAL SECURITY, LLC MAKES 
#  ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LIABILITY 
#  FOR THE USE OF THIS SOFTWARE.  If software is modified to 
#  produce derivative works, such modified software should be 
#  clearly marked, so as not to confuse it with the version 
#  available from LANL.
#
#  Additionally, redistribution and use in source and binary 
#  forms, with or without modification, are permitted provided 
#  that the following conditions are met:
#
#  1. Redistributions of source code must retain the 
#     above copyright notice, this list of conditions 
#     and the following disclaimer. 
#  2. Redistributions in binary form must reproduce the 
#     above copyright notice, this list of conditions 
#     and the following disclaimer in the documentation 
#     and/or other materials provided with the distribution. 
#  3. Neither the name of Los Alamos National Security, LLC, 
#     Los Alamos National Laboratory, LANL, the U.S. Government, 
#     nor the names of its contributors may be used to endorse 
#     or promote products derived from this software without 
#     specific prior written permission.
#   
#  THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC 
#  AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
#  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
#  IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR CONTRIBUTORS 
#  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
#  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
#  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
#  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
#  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
#  OF SUCH DAMAGE.
#
#  ###################################################################

This directory contains various scripts that are either called by Pavilion core code
or are stand-alone utilities useful for others tasks (such as file analysis).
 
Some of these utility scripts are specific to LANL thus are not included in the git repo.

Feel free to make new ones, improve, or re-write these.


-- list as of 12/9/2015 ----

ReadBackwards.pm - core script used by get_results to read files from the end.
blDiff - utility that shows delta between like tests in two different baseline data files
checkjob_getNodeList - utility used to find nodes allocated to a Moab job if given the jobid. 
chklg - core logic used by get_results to determine pass/fail/unknown/undefined status from output in log file.
cleanupWS - old Gazebo utility (not ported to Pavilon yet) used to clean up old working spaces.
defaultDaysAgo.py - core script called by get_results 
find_test_dirs - core script used by get_results to find the list of result directories to analyze. 
findgrep - utility that can be used to recursivily find strings in files starting at some given level.
fmp - utility that is the beginnings of replacement for jobFailAnal. Probably should be renamed to when working.
getCLENodeList - core script used to find what nodes were allocated to this job run on Cray systems.
getCleNids - core script called by getCLENodeList
getNodeCoverage - utility that will tabulate job run time on each compute node over a give range of time. 
getNodeList - core script called by Pavilion to find what nodes were allocated to this job run.
getSLURMNodeList - core script used to find what nodes were alloacated to this job run.
get_results - core script called by Pavilion ported from Gazebo that summaries test result data.
get_results-with-expanded-time-summary - same as get_results, but time reported in min/mean/max. To be switched to someday.
jobFailAnal - very simple knowledge based utility to find common failure strings in files in result directories.
jobReportcsv - utility to generate a basic csv list of common information of all tests starting at a specific date.
listgrp - core script used by get_results and find_test_dirs. 
mk-tpl - utility often used after a set of test runs that creates a specific format of report summary and data.  
mkBaselines - core script used by get_results to create a baseline of all trend data values.
mytime - core script used to time program runs.
pv_testMgr - utility used to continually launch pavilion tests/jobs
showtd - core script used by get_results to display trend data in graphical and table format.
splunk - directory that contains a core script that is called by pavilion to generate the my.splunkdata file is the results directory
sysStatChanges - utility used to read output from sysState script and summarize changes to the node availability. 
sysTimeline - utility used to read output from sysState script and output in colum format actual state changes
sysState - tcsh script typically called by cron to record status of up/down nodes on a Cray system.
tabulate.py - python module used by showtd to support displaying tabular data.
td2csvgdl - core script used by Pavilion to generate running csv file of all trend data. See test_results.csv in results root dir.
xexec - directory containing multi-purpose HPC system testing tool.

