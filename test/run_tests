#!/usr/bin/env python3

# This runs all the tests in the tests/ directory. For a python file to be recognized as a test
# suite, it must end in '_tests.py'. All other files are ignored.

# The __init__ for the tests module sets up all the tests.
import logging
import os
import sys
import unittest


logging_root = '/tmp/{user}'.format(user=os.getlogin())
if not os.path.exists(logging_root):
    os.makedirs(logging_root)
log_path = os.path.join(logging_root, 'pavilion_tests.log')
logging.basicConfig(filename=log_path,)
console = logging.StreamHandler()
console.setLevel(logging.INFO)
console.setFormatter(logging.Formatter(fmt='\x1b[2m%(message)s\x1b[0m'))
logging.getLogger('').addHandler(console)
print("Setting logging to output to ({}) and stderr".format(log_path))

config = 'test_data/pav_config_dir/pavilion.yaml'
if not os.path.exists(config):
    print("\nERROR")
    print("Could not find a config file at '{}'".format(config))
    print("To run tests, this file must be created.")
    print("It may be blank, or may contain proxy info.")
    sys.exit(1)

# Setup our paths to the pavilion libraries.
sys.path.append(os.path.abspath('../lib'))

loader = unittest.TestLoader()
suite = loader.discover('./tests', pattern='*_tests.py')
unittest.TextTestRunner(verbosity=2).run(suite)
